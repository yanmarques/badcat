#!/bin/bash
set -e

COMPILE_MINGW=${COMPILE_MINGW:-false}
HOST=x86_64-w64-mingw32
MINGW=mingw64

BADCAT_REPO="${BADCAT_REPO:./}"

DIST="${DIST:-dist}"
DIST_TARGET="${DIST_TARGET:-target}"

get_libevent() (
    wget -q https://github.com/libevent/libevent/releases/download/release-2.1.12-stable/libevent-2.1.12-stable.tar.gz
    tar -xf libevent-2.1.12-stable.tar.gz
)

get_openssl() (
    wget -q https://github.com/openssl/openssl/archive/refs/tags/OpenSSL_1_1_1l.tar.gz
    tar -xf OpenSSL_1_1_1l.tar.gz
)

get_zlib() (
    wget -q https://github.com/madler/zlib/archive/refs/tags/v1.2.11.tar.gz
    tar -xf v1.2.11.tar.gz
)

get_tor() (
    wget -q https://github.com/torproject/tor/archive/refs/tags/tor-0.4.6.8.tar.gz
    tar -xf tor-0.4.6.8.tar.gz
)

patch_tor() (
    patch -s -t -p0 < "$BADCAT_REPO"/rust_hs.patch
)

build_libevent() (
    local args=(
        --prefix="$DIST" \
        --disable-shared \
        --enable-static \
        --with-pic \
        --disable-samples \
        --disable-libevent-regress \
        --disable-openssl
    )

    if $COMPILE_MINGW; then
        args+=( --host="$HOST" )
    fi

    pushd libevent-2.1.12-stable

    ./configure ${args[@]}
    make
    make install

    popd
)

build_openssl() (
    local args=( --prefix="$DIST" no-shared no-dso no-zlib )
    local exe=./config

    if $COMPILE_MINGW; then
        exe=./Configure
        args+=( --cross-compile-prefix="$HOST"- "$MINGW" )
    fi

    pushd openssl-OpenSSL_1_1_1l

    $exe ${args[@]}
    make depend
    make -j4
    make install_sw

    popd
)

build_zlib() (
    if $COMPILE_MINGW; then
        export CC="$HOST"-gcc
    fi

    pushd zlib-1.2.11

    CFLAGS=-fPIC ./configure --prefix="$DIST" --static
    make
    make install

    popd
)

build_tor() (
    local args=(
        --disable-unittests \
        --disable-system-torrc \
        --disable-manpage \
        --disable-html-manual \
        --disable-asciidoc \
        --disable-gcc-hardening \
        --disable-linker-hardening \
        --disable-tool-name-check \
        --disable-module-dirauth \
        --disable-module-relay \
        --with-libevent-dir="$DIST" \
        --with-openssl-dir="$DIST" \
        --with-zlib-dir="$DIST" \
        --enable-static-libevent \
        --enable-static-openssl \
        --enable-static-zlib \
        --enable-pic
    )

    if $COMPILE_MINGW; then
        args+=( --host="$HOST" )
        CFLAGS=-mwindows
    fi

    pushd tor-tor-0.4.6.8

    ./autogen.sh
    ./configure ${args[@]}

    # We only want the static libraries, so
    # disable linking to a executable because it
    # would fail anyway.
    sed -i 's/^CCLD \= \$(CC)/CCLD = true/' Makefile

    make -j4
    popd
)

bundle_tor_static_libs() (
    local tmpdir="$(mktemp -d)"
    mkdir "$tmpdir/static-libs"

    pushd tor-tor-0.4.6.8/src

    cp \
        core/libtor-app.a \
        lib/libtor-compress.a \
        lib/libtor-evloop.a \
        lib/libtor-tls.a \
        lib/libtor-crypt-ops.a \
        lib/libcurve25519_donna.a \
        lib/libtor-geoip.a  \
        lib/libtor-process.a \
        lib/libtor-time.a \
        lib/libtor-fs.a \
        lib/libtor-encoding.a \
        lib/libtor-sandbox.a \
        lib/libtor-net.a \
        lib/libtor-thread.a \
        lib/libtor-memarea.a \
        lib/libtor-math.a \
        lib/libtor-meminfo.a \
        lib/libtor-osinfo.a \
        lib/libtor-log.a \
        lib/libtor-lock.a \
        lib/libtor-fdio.a \
        lib/libtor-string.a \
        lib/libtor-term.a \
        lib/libtor-smartlist-core.a \
        lib/libtor-malloc.a \
        lib/libtor-wallclock.a \
        lib/libtor-err.a \
        lib/libtor-intmath.a \
        lib/libtor-ctime.a \
        lib/libtor-trace.a \
        lib/libtor-metrics.a \
        lib/libtor-llharden.a \
        ext/keccak-tiny/libkeccak-tiny.a \
        ext/ed25519/ref10/libed25519_ref10.a \
        ext/ed25519/donna/libed25519_donna.a \
        trunnel/libor-trunnel.a \
        lib/libtor-buf.a \
        lib/libtor-version.a \
        lib/libtor-pubsub.a \
        lib/libtor-dispatch.a \
        lib/libtor-container.a \
        lib/libtor-confmgt.a \
        "$DIST"/lib/libevent.a \
        "$DIST"/lib/libz.a \
        "$DIST"/lib/libssl.a \
        "$DIST"/lib/libcrypto.a \
        "$tmpdir/static-libs"

    pushd "$tmpdir"
    tar -cf "$DIST_TARGET"/static-libs.tar.xz ./static-libs
    popd

    popd
)

## Static libraries
# core/libtor-app.a
# lib/libtor-compress.a
# lib/libtor-evloop.a
# lib/libtor-tls.a
# lib/libtor-crypt-ops.a
# lib/libcurve25519_donna.a
# lib/libtor-geoip.a
# lib/libtor-process.a
# lib/libtor-time.a
# lib/libtor-fs.a
# lib/libtor-encoding.a
# lib/libtor-sandbox.a
# lib/libtor-container.a
# lib/libtor-net.a
# lib/libtor-thread.a
# lib/libtor-memarea.a
# lib/libtor-math.a
# lib/libtor-meminfo.a
# lib/libtor-osinfo.a
# lib/libtor-log.a
# lib/libtor-lock.a
# lib/libtor-fdio.a
# lib/libtor-string.a
# lib/libtor-term.a
# lib/libtor-smartlist-core.a
# lib/libtor-malloc.a
# lib/libtor-wallclock.a
# lib/libtor-err.a
# lib/libtor-intmath.a
# lib/libtor-ctime.a
# lib/libtor-trace.a
# lib/libtor-metrics.a
# lib/libtor-llharden.a
# ext/keccak-tiny/libkeccak-tiny.a
# ext/ed25519/ref10/libed25519_ref10.a
# ext/ed25519/donna/libed25519_donna.a
# trunnel/libor-trunnel.a
# lib/libtor-buf.a
# lib/libtor-version.a
# lib/libtor-pubsub.a
# lib/libtor-dispatch.a
# lib/libtor-container.a
# lib/libtor-confmgt.a
# /usr/lib/x86_64-linux-gnu/libpthread.a
# /usr/lib/x86_64-linux-gnu/libm.a
# /dist/lib/libevent.a
# /dist/lib/libz.a
# /dist/lib/libssl.a
# /dist/lib/libcrypto.a

# directory where compiled executables/libraries/headers will be placed
if [ ! -d "$DIST" ]; then
    mkdir "$DIST"
fi

# Download stuff
get_libevent
get_openssl
get_zlib
get_tor

patch_tor

# Build dependencies
build_libevent
build_zlib
build_openssl

if [ ! -d "$DIST_TARGET" ]; then
    echo "WARNING: Destination directory at [$DIST_TARGET] not presented." >&2
    echo "WARNING: If you are running inside a Docker container, consider passing a volume pointing at /target directory." >&2
    mkdir "$DIST_TARGET"
fi

# Finally
build_tor

bundle_tor_static_libs
